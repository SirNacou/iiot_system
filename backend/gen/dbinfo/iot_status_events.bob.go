// Code generated by BobGen psql v0.41.1. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package dbinfo

import "github.com/aarondl/opt/null"

var IotStatusEvents = Table[
	iotStatusEventColumns,
	iotStatusEventIndexes,
	iotStatusEventForeignKeys,
	iotStatusEventUniques,
	iotStatusEventChecks,
]{
	Schema: "",
	Name:   "iot_status_events",
	Columns: iotStatusEventColumns{
		Time: column{
			Name:      "time",
			DBType:    "timestamp with time zone",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		DeviceID: column{
			Name:      "device_id",
			DBType:    "character varying",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		OldStatus: column{
			Name:      "old_status",
			DBType:    "character varying",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		NewStatus: column{
			Name:      "new_status",
			DBType:    "character varying",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		Reason: column{
			Name:      "reason",
			DBType:    "character varying",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
	},
	Indexes: iotStatusEventIndexes{
		IotStatusEventsTimeIdx: index{
			Type: "btree",
			Name: "iot_status_events_time_idx",
			Columns: []indexColumn{
				{
					Name:         "\"time\"",
					Desc:         null.FromCond(true, true),
					IsExpression: true,
				},
			},
			Unique:        false,
			Comment:       "",
			NullsFirst:    []bool{true},
			NullsDistinct: false,
			Where:         "",
			Include:       []string{},
		},
	},

	Comment: "",
}

type iotStatusEventColumns struct {
	Time      column
	DeviceID  column
	OldStatus column
	NewStatus column
	Reason    column
}

func (c iotStatusEventColumns) AsSlice() []column {
	return []column{
		c.Time, c.DeviceID, c.OldStatus, c.NewStatus, c.Reason,
	}
}

type iotStatusEventIndexes struct {
	IotStatusEventsTimeIdx index
}

func (i iotStatusEventIndexes) AsSlice() []index {
	return []index{
		i.IotStatusEventsTimeIdx,
	}
}

type iotStatusEventForeignKeys struct{}

func (f iotStatusEventForeignKeys) AsSlice() []foreignKey {
	return []foreignKey{}
}

type iotStatusEventUniques struct{}

func (u iotStatusEventUniques) AsSlice() []constraint {
	return []constraint{}
}

type iotStatusEventChecks struct{}

func (c iotStatusEventChecks) AsSlice() []check {
	return []check{}
}
