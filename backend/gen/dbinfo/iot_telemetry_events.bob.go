// Code generated by BobGen psql v0.41.1. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package dbinfo

import "github.com/aarondl/opt/null"

var IotTelemetryEvents = Table[
	iotTelemetryEventColumns,
	iotTelemetryEventIndexes,
	iotTelemetryEventForeignKeys,
	iotTelemetryEventUniques,
	iotTelemetryEventChecks,
]{
	Schema: "",
	Name:   "iot_telemetry_events",
	Columns: iotTelemetryEventColumns{
		Time: column{
			Name:      "time",
			DBType:    "timestamp with time zone",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		DeviceID: column{
			Name:      "device_id",
			DBType:    "character varying",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		TemperatureCelcius: column{
			Name:      "temperature_celcius",
			DBType:    "numeric",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		HumidityPercent: column{
			Name:      "humidity_percent",
			DBType:    "numeric",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		VibrationHZ: column{
			Name:      "vibration_hz",
			DBType:    "numeric",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		MotorRPM: column{
			Name:      "motor_rpm",
			DBType:    "integer",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		CurrentAmps: column{
			Name:      "current_amps",
			DBType:    "numeric",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		MachineStatus: column{
			Name:      "machine_status",
			DBType:    "character varying",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		ErrorCode: column{
			Name:      "error_code",
			DBType:    "character varying",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
	},
	Indexes: iotTelemetryEventIndexes{
		IotTelemetryEventsTimeIdx: index{
			Type: "btree",
			Name: "iot_telemetry_events_time_idx",
			Columns: []indexColumn{
				{
					Name:         "\"time\"",
					Desc:         null.FromCond(true, true),
					IsExpression: true,
				},
			},
			Unique:        false,
			Comment:       "",
			NullsFirst:    []bool{true},
			NullsDistinct: false,
			Where:         "",
			Include:       []string{},
		},
	},

	Comment: "",
}

type iotTelemetryEventColumns struct {
	Time               column
	DeviceID           column
	TemperatureCelcius column
	HumidityPercent    column
	VibrationHZ        column
	MotorRPM           column
	CurrentAmps        column
	MachineStatus      column
	ErrorCode          column
}

func (c iotTelemetryEventColumns) AsSlice() []column {
	return []column{
		c.Time, c.DeviceID, c.TemperatureCelcius, c.HumidityPercent, c.VibrationHZ, c.MotorRPM, c.CurrentAmps, c.MachineStatus, c.ErrorCode,
	}
}

type iotTelemetryEventIndexes struct {
	IotTelemetryEventsTimeIdx index
}

func (i iotTelemetryEventIndexes) AsSlice() []index {
	return []index{
		i.IotTelemetryEventsTimeIdx,
	}
}

type iotTelemetryEventForeignKeys struct{}

func (f iotTelemetryEventForeignKeys) AsSlice() []foreignKey {
	return []foreignKey{}
}

type iotTelemetryEventUniques struct{}

func (u iotTelemetryEventUniques) AsSlice() []constraint {
	return []constraint{}
}

type iotTelemetryEventChecks struct{}

func (c iotTelemetryEventChecks) AsSlice() []check {
	return []check{}
}
