// Code generated by BobGen psql v0.40.2. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package dbinfo

import "github.com/aarondl/opt/null"

var IotAlertEvents = Table[
	iotAlertEventColumns,
	iotAlertEventIndexes,
	iotAlertEventForeignKeys,
	iotAlertEventUniques,
	iotAlertEventChecks,
]{
	Schema: "",
	Name:   "iot_alert_events",
	Columns: iotAlertEventColumns{
		Time: column{
			Name:      "time",
			DBType:    "timestamp with time zone",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		DeviceID: column{
			Name:      "device_id",
			DBType:    "character varying",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		AlertType: column{
			Name:      "alert_type",
			DBType:    "character varying",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		Severity: column{
			Name:      "severity",
			DBType:    "character varying",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		Message: column{
			Name:      "message",
			DBType:    "text",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		CurrentValue: column{
			Name:      "current_value",
			DBType:    "numeric",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
	},
	Indexes: iotAlertEventIndexes{
		IotAlertEventsTimeIdx: index{
			Type: "btree",
			Name: "iot_alert_events_time_idx",
			Columns: []indexColumn{
				{
					Name:         "\"time\"",
					Desc:         null.FromCond(true, true),
					IsExpression: true,
				},
			},
			Unique:        false,
			Comment:       "",
			NullsFirst:    []bool{true},
			NullsDistinct: false,
			Where:         "",
			Include:       []string{},
		},
	},

	Comment: "",
}

type iotAlertEventColumns struct {
	Time         column
	DeviceID     column
	AlertType    column
	Severity     column
	Message      column
	CurrentValue column
}

func (c iotAlertEventColumns) AsSlice() []column {
	return []column{
		c.Time, c.DeviceID, c.AlertType, c.Severity, c.Message, c.CurrentValue,
	}
}

type iotAlertEventIndexes struct {
	IotAlertEventsTimeIdx index
}

func (i iotAlertEventIndexes) AsSlice() []index {
	return []index{
		i.IotAlertEventsTimeIdx,
	}
}

type iotAlertEventForeignKeys struct{}

func (f iotAlertEventForeignKeys) AsSlice() []foreignKey {
	return []foreignKey{}
}

type iotAlertEventUniques struct{}

func (u iotAlertEventUniques) AsSlice() []constraint {
	return []constraint{}
}

type iotAlertEventChecks struct{}

func (c iotAlertEventChecks) AsSlice() []check {
	return []check{}
}
