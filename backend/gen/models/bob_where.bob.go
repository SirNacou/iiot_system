// Code generated by BobGen psql v0.41.1. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import (
	"github.com/stephenafamo/bob/clause"
	"github.com/stephenafamo/bob/dialect/psql"
	"github.com/stephenafamo/bob/dialect/psql/dialect"
)

var (
	SelectWhere     = Where[*dialect.SelectQuery]()
	UpdateWhere     = Where[*dialect.UpdateQuery]()
	DeleteWhere     = Where[*dialect.DeleteQuery]()
	OnConflictWhere = Where[*clause.ConflictClause]() // Used in ON CONFLICT DO UPDATE
)

func Where[Q psql.Filterable]() struct {
	IotAlertEvents      iotAlertEventWhere[Q]
	IotProductionEvents iotProductionEventWhere[Q]
	IotStatusEvents     iotStatusEventWhere[Q]
	IotTelemetryEvents  iotTelemetryEventWhere[Q]
	SchemaMigrations    schemaMigrationWhere[Q]
} {
	return struct {
		IotAlertEvents      iotAlertEventWhere[Q]
		IotProductionEvents iotProductionEventWhere[Q]
		IotStatusEvents     iotStatusEventWhere[Q]
		IotTelemetryEvents  iotTelemetryEventWhere[Q]
		SchemaMigrations    schemaMigrationWhere[Q]
	}{
		IotAlertEvents:      buildIotAlertEventWhere[Q](IotAlertEvents.Columns),
		IotProductionEvents: buildIotProductionEventWhere[Q](IotProductionEvents.Columns),
		IotStatusEvents:     buildIotStatusEventWhere[Q](IotStatusEvents.Columns),
		IotTelemetryEvents:  buildIotTelemetryEventWhere[Q](IotTelemetryEvents.Columns),
		SchemaMigrations:    buildSchemaMigrationWhere[Q](SchemaMigrations.Columns),
	}
}
