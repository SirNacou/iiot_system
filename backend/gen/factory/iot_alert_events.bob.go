// Code generated by BobGen psql v0.41.1. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package factory

import (
	"context"
	"time"

	"github.com/aarondl/opt/null"
	"github.com/jaswdr/faker/v2"
	"github.com/shopspring/decimal"
	models "iiot_system/backend/gen/models"
)

type IotAlertEventMod interface {
	Apply(context.Context, *IotAlertEventTemplate)
}

type IotAlertEventModFunc func(context.Context, *IotAlertEventTemplate)

func (f IotAlertEventModFunc) Apply(ctx context.Context, n *IotAlertEventTemplate) {
	f(ctx, n)
}

type IotAlertEventModSlice []IotAlertEventMod

func (mods IotAlertEventModSlice) Apply(ctx context.Context, n *IotAlertEventTemplate) {
	for _, f := range mods {
		f.Apply(ctx, n)
	}
}

// IotAlertEventTemplate is an object representing the database table.
// all columns are optional and should be set by mods
type IotAlertEventTemplate struct {
	Time         func() time.Time
	DeviceID     func() string
	AlertType    func() string
	Severity     func() string
	Message      func() string
	CurrentValue func() null.Val[decimal.Decimal]

	f *Factory

	alreadyPersisted bool
}

// Apply mods to the IotAlertEventTemplate
func (o *IotAlertEventTemplate) Apply(ctx context.Context, mods ...IotAlertEventMod) {
	for _, mod := range mods {
		mod.Apply(ctx, o)
	}
}

// setModelRels creates and sets the relationships on *models.IotAlertEvent
// according to the relationships in the template. Nothing is inserted into the db
func (t IotAlertEventTemplate) setModelRels(o *models.IotAlertEvent) {}

// Build returns an *models.IotAlertEvent
// Related objects are also created and placed in the .R field
// NOTE: Objects are not inserted into the database. Use IotAlertEventTemplate.Create
func (o IotAlertEventTemplate) Build() *models.IotAlertEvent {
	m := &models.IotAlertEvent{}

	if o.Time != nil {
		m.Time = o.Time()
	}
	if o.DeviceID != nil {
		m.DeviceID = o.DeviceID()
	}
	if o.AlertType != nil {
		m.AlertType = o.AlertType()
	}
	if o.Severity != nil {
		m.Severity = o.Severity()
	}
	if o.Message != nil {
		m.Message = o.Message()
	}
	if o.CurrentValue != nil {
		m.CurrentValue = o.CurrentValue()
	}

	o.setModelRels(m)

	return m
}

// BuildMany returns an models.IotAlertEventSlice
// Related objects are also created and placed in the .R field
// NOTE: Objects are not inserted into the database. Use IotAlertEventTemplate.CreateMany
func (o IotAlertEventTemplate) BuildMany(number int) models.IotAlertEventSlice {
	m := make(models.IotAlertEventSlice, number)

	for i := range m {
		m[i] = o.Build()
	}

	return m
}

// IotAlertEvent has methods that act as mods for the IotAlertEventTemplate
var IotAlertEventMods iotAlertEventMods

type iotAlertEventMods struct{}

func (m iotAlertEventMods) RandomizeAllColumns(f *faker.Faker) IotAlertEventMod {
	return IotAlertEventModSlice{
		IotAlertEventMods.RandomTime(f),
		IotAlertEventMods.RandomDeviceID(f),
		IotAlertEventMods.RandomAlertType(f),
		IotAlertEventMods.RandomSeverity(f),
		IotAlertEventMods.RandomMessage(f),
		IotAlertEventMods.RandomCurrentValue(f),
	}
}

// Set the model columns to this value
func (m iotAlertEventMods) Time(val time.Time) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.Time = func() time.Time { return val }
	})
}

// Set the Column from the function
func (m iotAlertEventMods) TimeFunc(f func() time.Time) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.Time = f
	})
}

// Clear any values for the column
func (m iotAlertEventMods) UnsetTime() IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.Time = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
func (m iotAlertEventMods) RandomTime(f *faker.Faker) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.Time = func() time.Time {
			return random_time_Time(f)
		}
	})
}

// Set the model columns to this value
func (m iotAlertEventMods) DeviceID(val string) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.DeviceID = func() string { return val }
	})
}

// Set the Column from the function
func (m iotAlertEventMods) DeviceIDFunc(f func() string) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.DeviceID = f
	})
}

// Clear any values for the column
func (m iotAlertEventMods) UnsetDeviceID() IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.DeviceID = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
func (m iotAlertEventMods) RandomDeviceID(f *faker.Faker) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.DeviceID = func() string {
			return random_string(f, "50")
		}
	})
}

// Set the model columns to this value
func (m iotAlertEventMods) AlertType(val string) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.AlertType = func() string { return val }
	})
}

// Set the Column from the function
func (m iotAlertEventMods) AlertTypeFunc(f func() string) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.AlertType = f
	})
}

// Clear any values for the column
func (m iotAlertEventMods) UnsetAlertType() IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.AlertType = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
func (m iotAlertEventMods) RandomAlertType(f *faker.Faker) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.AlertType = func() string {
			return random_string(f, "50")
		}
	})
}

// Set the model columns to this value
func (m iotAlertEventMods) Severity(val string) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.Severity = func() string { return val }
	})
}

// Set the Column from the function
func (m iotAlertEventMods) SeverityFunc(f func() string) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.Severity = f
	})
}

// Clear any values for the column
func (m iotAlertEventMods) UnsetSeverity() IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.Severity = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
func (m iotAlertEventMods) RandomSeverity(f *faker.Faker) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.Severity = func() string {
			return random_string(f, "20")
		}
	})
}

// Set the model columns to this value
func (m iotAlertEventMods) Message(val string) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.Message = func() string { return val }
	})
}

// Set the Column from the function
func (m iotAlertEventMods) MessageFunc(f func() string) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.Message = f
	})
}

// Clear any values for the column
func (m iotAlertEventMods) UnsetMessage() IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.Message = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
func (m iotAlertEventMods) RandomMessage(f *faker.Faker) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.Message = func() string {
			return random_string(f)
		}
	})
}

// Set the model columns to this value
func (m iotAlertEventMods) CurrentValue(val null.Val[decimal.Decimal]) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.CurrentValue = func() null.Val[decimal.Decimal] { return val }
	})
}

// Set the Column from the function
func (m iotAlertEventMods) CurrentValueFunc(f func() null.Val[decimal.Decimal]) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.CurrentValue = f
	})
}

// Clear any values for the column
func (m iotAlertEventMods) UnsetCurrentValue() IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.CurrentValue = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m iotAlertEventMods) RandomCurrentValue(f *faker.Faker) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.CurrentValue = func() null.Val[decimal.Decimal] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_decimal_Decimal(f, "6", "2")
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m iotAlertEventMods) RandomCurrentValueNotNull(f *faker.Faker) IotAlertEventMod {
	return IotAlertEventModFunc(func(_ context.Context, o *IotAlertEventTemplate) {
		o.CurrentValue = func() null.Val[decimal.Decimal] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_decimal_Decimal(f, "6", "2")
			return null.From(val)
		}
	})
}

func (m iotAlertEventMods) WithParentsCascading() IotAlertEventMod {
	return IotAlertEventModFunc(func(ctx context.Context, o *IotAlertEventTemplate) {
		if isDone, _ := iotAlertEventWithParentsCascadingCtx.Value(ctx); isDone {
			return
		}
		ctx = iotAlertEventWithParentsCascadingCtx.WithValue(ctx, true)
	})
}
