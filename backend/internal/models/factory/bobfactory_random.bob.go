// Code generated by BobGen psql v0.38.0. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package factory

import (
	"strconv"
	"strings"
	"time"

	"github.com/jaswdr/faker/v2"
	"github.com/shopspring/decimal"
)

var defaultFaker = faker.New()

func random_decimal_Decimal(f *faker.Faker, limits ...string) decimal.Decimal {
	if f == nil {
		f = &defaultFaker
	}

	var precision int64 = 5
	var scale int64 = 2

	if len(limits) > 0 {
		precision, _ = strconv.ParseInt(limits[0], 10, 32)
	}

	if len(limits) > 1 {
		scale, _ = strconv.ParseInt(limits[1], 10, 32)
	}

	precisionDecimal, _ := decimal.NewFromInt(10).PowInt32(int32(precision))
	return decimal.
		NewFromFloat32(f.Float32(10, -1, 1)).
		Mul(precisionDecimal).
		Shift(int32(-1 * scale)).
		RoundDown(int32(scale))
}

func random_string(f *faker.Faker, limits ...string) string {
	if f == nil {
		f = &defaultFaker
	}

	val := strings.Join(f.Lorem().Words(f.IntBetween(1, 5)), " ")
	if len(limits) == 0 {
		return val
	}
	limitInt, _ := strconv.Atoi(limits[0])
	if limitInt > 0 && limitInt < len(val) {
		val = val[:limitInt]
	}
	return val
}

func random_time_Time(f *faker.Faker, limits ...string) time.Time {
	if f == nil {
		f = &defaultFaker
	}

	year := time.Hour * 24 * 365
	min := time.Now().Add(-year)
	max := time.Now().Add(year)
	return f.Time().TimeBetween(min, max)
}
