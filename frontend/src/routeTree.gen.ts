/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MainLayoutRouteImport } from './routes/_mainLayout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DemoTableRouteImport } from './routes/demo.table'
import { Route as MainLayoutDashboardRouteImport } from './routes/_mainLayout/dashboard'
import { Route as MainLayoutAnalyticsRouteImport } from './routes/_mainLayout/analytics'
import { Route as MainLayoutDeviceDeviceIdRouteImport } from './routes/_mainLayout/device.$deviceId'

const MainLayoutRoute = MainLayoutRouteImport.update({
  id: '/_mainLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTableRoute = DemoTableRouteImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRouteImport,
} as any)
const MainLayoutDashboardRoute = MainLayoutDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => MainLayoutRoute,
} as any)
const MainLayoutAnalyticsRoute = MainLayoutAnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => MainLayoutRoute,
} as any)
const MainLayoutDeviceDeviceIdRoute =
  MainLayoutDeviceDeviceIdRouteImport.update({
    id: '/device/$deviceId',
    path: '/device/$deviceId',
    getParentRoute: () => MainLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/analytics': typeof MainLayoutAnalyticsRoute
  '/dashboard': typeof MainLayoutDashboardRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/device/$deviceId': typeof MainLayoutDeviceDeviceIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/analytics': typeof MainLayoutAnalyticsRoute
  '/dashboard': typeof MainLayoutDashboardRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/device/$deviceId': typeof MainLayoutDeviceDeviceIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_mainLayout': typeof MainLayoutRouteWithChildren
  '/_mainLayout/analytics': typeof MainLayoutAnalyticsRoute
  '/_mainLayout/dashboard': typeof MainLayoutDashboardRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/_mainLayout/device/$deviceId': typeof MainLayoutDeviceDeviceIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/analytics'
    | '/dashboard'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/device/$deviceId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/analytics'
    | '/dashboard'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/device/$deviceId'
  id:
    | '__root__'
    | '/'
    | '/_mainLayout'
    | '/_mainLayout/analytics'
    | '/_mainLayout/dashboard'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/_mainLayout/device/$deviceId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MainLayoutRoute: typeof MainLayoutRouteWithChildren
  DemoTableRoute: typeof DemoTableRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_mainLayout': {
      id: '/_mainLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/table': {
      id: '/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoTableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_mainLayout/dashboard': {
      id: '/_mainLayout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof MainLayoutDashboardRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/analytics': {
      id: '/_mainLayout/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof MainLayoutAnalyticsRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/device/$deviceId': {
      id: '/_mainLayout/device/$deviceId'
      path: '/device/$deviceId'
      fullPath: '/device/$deviceId'
      preLoaderRoute: typeof MainLayoutDeviceDeviceIdRouteImport
      parentRoute: typeof MainLayoutRoute
    }
  }
}

interface MainLayoutRouteChildren {
  MainLayoutAnalyticsRoute: typeof MainLayoutAnalyticsRoute
  MainLayoutDashboardRoute: typeof MainLayoutDashboardRoute
  MainLayoutDeviceDeviceIdRoute: typeof MainLayoutDeviceDeviceIdRoute
}

const MainLayoutRouteChildren: MainLayoutRouteChildren = {
  MainLayoutAnalyticsRoute: MainLayoutAnalyticsRoute,
  MainLayoutDashboardRoute: MainLayoutDashboardRoute,
  MainLayoutDeviceDeviceIdRoute: MainLayoutDeviceDeviceIdRoute,
}

const MainLayoutRouteWithChildren = MainLayoutRoute._addFileChildren(
  MainLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MainLayoutRoute: MainLayoutRouteWithChildren,
  DemoTableRoute: DemoTableRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
